version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: electra_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-electra_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - electra_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: electra_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - electra_network

  # Django Application (Development)
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: electra_web
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=electra_server.settings.dev
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-secret-key-change-in-production}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres123@db:5432/electra_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0,web}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret}
      - RSA_PRIVATE_KEY_PATH=${RSA_PRIVATE_KEY_PATH:-keys/private_key.pem}
      - RSA_PUBLIC_KEY_PATH=${RSA_PUBLIC_KEY_PATH:-keys/public_key.pem}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID:-}
      - FCM_SERVER_KEY=${FCM_SERVER_KEY:-}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-}
      - BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY:-}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "${WEB_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - electra_network

  # Django Application (Production)
  web-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: electra_web_prod
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=electra_server.settings.prod
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - RSA_PRIVATE_KEY_PATH=${RSA_PRIVATE_KEY_PATH:-keys/private_key.pem}
      - RSA_PUBLIC_KEY_PATH=${RSA_PUBLIC_KEY_PATH:-keys/public_key.pem}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-True}
      - SECURE_HSTS_SECONDS=${SECURE_HSTS_SECONDS:-31536000}
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-production}
      - RELEASE_VERSION=${RELEASE_VERSION:-1.0.0}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FCM_SERVER_KEY=${FCM_SERVER_KEY}
      - FCM_SENDER_ID=${FCM_SENDER_ID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_REGION=${AWS_REGION:-us-west-2}
      - BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY}
      - BACKUP_DIR=${BACKUP_DIR:-/var/backups/electra}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - MONITORING_SLACK_WEBHOOK=${MONITORING_SLACK_WEBHOOK}
      - SNYK_TOKEN=${SNYK_TOKEN}
      - ADMIN_URL=${ADMIN_URL:-admin/}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-electra-django}
      - OTEL_EXPORTER_JAEGER_ENDPOINT=${OTEL_EXPORTER_JAEGER_ENDPOINT:-http://jaeger:14268/api/traces}
      - ELECTRA_METRICS_ENABLED=${ELECTRA_METRICS_ENABLED:-True}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
      - ./keys:/app/keys:ro  # Mount keys as read-only
    ports:
      - "${WEB_PROD_PORT:-8001}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - electra_network
    profiles:
      - production

  # Nginx (for production)
  nginx:
    image: nginx:alpine
    container_name: electra_nginx
    environment:
      - NGINX_HOST=${NGINX_HOST:-localhost}
      - NGINX_PORT=${NGINX_PORT:-80}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available/electra:/etc/nginx/sites-available/default:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    depends_on:
      - web-prod
    networks:
      - electra_network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

networks:
  electra_network:
    driver: bridge