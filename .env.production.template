# =====================================================
# PRODUCTION ENVIRONMENT TEMPLATE
# =====================================================
# COPY THIS FILE TO .env.production AND UPDATE VALUES
# This template provides all required production settings

# =====================================================
# DJANGO BACKEND CONFIGURATION
# =====================================================

# Core Django Settings - MUST CHANGE THESE
DJANGO_SECRET_KEY=CHANGE_ME_TO_SECURE_RANDOM_STRING_MINIMUM_50_CHARACTERS_LONG_FOR_PRODUCTION_USE_ONLY
DJANGO_DEBUG=False
DJANGO_ALLOWED_HOSTS=your-domain.com,api.your-domain.com
DJANGO_ENV=production

# Database Configuration - MUST USE POSTGRESQL IN PRODUCTION
DATABASE_URL=postgresql://electra_user:CHANGE_ME_SECURE_PASSWORD@your-db-host:5432/electra_production

# JWT Configuration  
JWT_SECRET_KEY=CHANGE_ME_TO_SECURE_RANDOM_JWT_SECRET_FOR_PRODUCTION_USE_ONLY
JWT_ACCESS_TOKEN_LIFETIME=900  # 15 minutes
JWT_REFRESH_TOKEN_LIFETIME=604800  # 7 days

# RSA Keys for JWT signing (generated by scripts/generate_rsa_keys.py)
RSA_PRIVATE_KEY_PATH=/app/keys/private_key.pem
RSA_PUBLIC_KEY_PATH=/app/keys/public_key.pem

# Email Configuration (SMTP) - CONFIGURE FOR PRODUCTION
EMAIL_HOST=smtp.your-email-provider.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=noreply@your-domain.com
EMAIL_HOST_PASSWORD=CHANGE_ME_EMAIL_APP_PASSWORD
DEFAULT_FROM_EMAIL=noreply@your-domain.com
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# Redis Configuration (required for production caching)
REDIS_URL=redis://your-redis-host:6379/0

# CORS Configuration - RESTRICT TO YOUR DOMAINS
CORS_ALLOWED_ORIGINS=https://your-domain.com,https://app.your-domain.com
CSRF_TRUSTED_ORIGINS=https://your-domain.com,https://app.your-domain.com

# Security Settings - ENABLE FOR PRODUCTION
SECURE_SSL_REDIRECT=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# Admin Configuration
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@your-domain.com
ADMIN_PASSWORD=CHANGE_ME_SECURE_ADMIN_PASSWORD
ADMIN_URL=secure-admin-panel/

# =====================================================
# MONITORING & OBSERVABILITY
# =====================================================

# OpenTelemetry Configuration
OTEL_SERVICE_NAME=electra-django
OTEL_RESOURCE_ATTRIBUTES=service.name=electra-django,service.version=1.0.0
OTEL_EXPORTER_JAEGER_ENDPOINT=http://your-jaeger-host:14268/api/traces

# Sentry Configuration (Error Tracking)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/your-project-id
SENTRY_ENVIRONMENT=production
RELEASE_VERSION=1.0.0

# Prometheus Metrics
ELECTRA_METRICS_PREFIX=electra
ELECTRA_METRICS_ENABLED=True
PROMETHEUS_EXPORT_MIGRATIONS=False

# =====================================================
# FIREBASE & PUSH NOTIFICATIONS (FCM)
# =====================================================

# Firebase Cloud Messaging (FCM) Configuration
FCM_SERVER_KEY=YOUR_FCM_SERVER_KEY_FROM_FIREBASE_CONSOLE
FCM_SENDER_ID=YOUR_FCM_SENDER_ID_FROM_FIREBASE_CONSOLE
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_API_KEY=YOUR_FIREBASE_API_KEY
FIREBASE_AUTH_DOMAIN=your-firebase-project-id.firebaseapp.com
FIREBASE_STORAGE_BUCKET=your-firebase-project-id.appspot.com
FIREBASE_MESSAGING_SENDER_ID=YOUR_FCM_SENDER_ID
FIREBASE_APP_ID=YOUR_FIREBASE_APP_ID
FIREBASE_MEASUREMENT_ID=YOUR_FIREBASE_MEASUREMENT_ID

# =====================================================
# CLOUD STORAGE & CDN (Optional but recommended)
# =====================================================

# AWS Configuration (if using cloud services)
AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY
AWS_REGION=us-west-2
AWS_STORAGE_BUCKET_NAME=your-electra-storage-bucket
AWS_S3_REGION_NAME=us-west-2
AWS_S3_FILE_OVERWRITE=False
AWS_DEFAULT_ACL=private

# =====================================================
# BACKUP & DATA PROTECTION
# =====================================================

# Backup Configuration  
BACKUP_ENCRYPTION_KEY=CHANGE_ME_SECURE_BACKUP_ENCRYPTION_KEY_32_CHARACTERS_LONG
BACKUP_DIR=/var/backups/electra
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-electra-backups-bucket

# =====================================================
# CI/CD & DEPLOYMENT
# =====================================================

# Docker Registry Configuration
DOCKER_REGISTRY=ghcr.io
DOCKER_REGISTRY_USER=your-github-username
DOCKER_REGISTRY_TOKEN=YOUR_GITHUB_PAT_TOKEN

# Kubernetes Configuration (if using K8s)
KUBECONFIG_PATH=/path/to/your/kubeconfig
KUBECTL_CONTEXT=your-production-cluster-context

# =====================================================
# ALERTING & NOTIFICATIONS
# =====================================================

# Slack Webhook for Alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK/URL
MONITORING_SLACK_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK/URL

# Email Alerting
MONITORING_EMAIL_FROM=alerts@your-domain.com
MONITORING_EMAIL_PASSWORD=CHANGE_ME_MONITORING_EMAIL_PASSWORD

# Security Scanning
SNYK_TOKEN=YOUR_SNYK_API_TOKEN_FOR_SECURITY_SCANNING

# =====================================================
# FRONTEND/FLUTTER CONFIGURATION
# =====================================================

# API Base URLs - MUST MATCH YOUR PRODUCTION DOMAIN
API_BASE_URL=https://api.your-domain.com
API_VERSION=v1
WS_BASE_URL=wss://api.your-domain.com

# Analytics Configuration (Optional)
GOOGLE_ANALYTICS_ID=YOUR_GOOGLE_ANALYTICS_ID
MIXPANEL_TOKEN=YOUR_MIXPANEL_TOKEN
AMPLITUDE_API_KEY=YOUR_AMPLITUDE_API_KEY

# Social Authentication (Optional)
GOOGLE_CLIENT_ID=YOUR_GOOGLE_OAUTH_CLIENT_ID
GOOGLE_CLIENT_SECRET=YOUR_GOOGLE_OAUTH_CLIENT_SECRET

# Feature Flags
ENABLE_BIOMETRICS=true
ENABLE_OFFLINE_VOTING=true
ENABLE_ANALYTICS=true  
ENABLE_NOTIFICATIONS=true
ENABLE_DARK_MODE=true

# University Branding
UNIVERSITY_NAME=Kwara State University
UNIVERSITY_ABBR=KWASU
SUPPORT_EMAIL=electoral@kwasu.edu.ng
SUPPORT_PHONE=+234-XXX-XXX-XXXX

# =====================================================
# SSL/TLS CONFIGURATION
# =====================================================

# SSL Certificate Paths (if using file-based certificates)
SSL_CERT_PATH=/etc/ssl/certs/your-domain.crt
SSL_KEY_PATH=/etc/ssl/private/your-domain.key

# =====================================================
# PRODUCTION CHECKLIST
# =====================================================

# Before deploying to production:
# 1. Replace ALL "CHANGE_ME" and "YOUR_" placeholders with actual values
# 2. Generate RSA keys: python scripts/generate_rsa_keys.py
# 3. Run validation: python scripts/validate_environment.py --strict
# 4. Test all services connect properly
# 5. Configure SSL certificates
# 6. Set up monitoring and alerting
# 7. Configure backup procedures
# 8. Test disaster recovery procedures